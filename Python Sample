from multiprocessing import Process
from threading import Thread
from random import randint
from time import gmtime, sleep

shared_x = randint(10, 99)

def sleeping(name):
    global shared_x
    t = gmtime()
    s = randint(1, 20)
    txt = f"{t.tm_min}:{t.tm_sec} {name} is going to sleep for {s} seconds"
    print(txt)
    sleep(s)
    t = gmtime()
    shared_x += 1
    txt = f"{t.tm_min}:{t.tm_sec} {name} has woken up, seeing shared x being {shared_x}"
    print(txt + str(shared_x))

def sleeper(name):
    sleeplist = []
    print(name, 'sees shared x being', shared_x)
    for i in range(3):
        subsleeper = Thread(target=sleeping, args=(f"{name} {i}",))
        sleeplist.append(subsleeper)
    for s in sleeplist:
        s.start()
    for s in sleeplist:
        s.join()
    print(name, 'sees shared x being', shared_x)

if __name__ == '__main__':
    sleeper('main')
